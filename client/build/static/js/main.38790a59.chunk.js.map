{"version":3,"sources":["components/RegisterBox.js","components/LoginBox.js","components/Task.js","components/TaskGroup.js","components/Prompt.js","App.js","serviceWorker.js","index.js"],"names":["RegisterBox","props","state","username","usernameErr","e","this","setState","target","value","preventDefault","user","Axios","post","then","res","catch","className","htmlFor","type","name","placeholder","onChange","onUsernameChange","bind","onClick","submitRegister","Component","LoginBox","status","console","log","data","returnJson","token","handler","submitLogin","Task","id","auth","headers","localStorage","getItem","delete","taskErr","put","isstrikedThrough","completed","Card","Text","style","textDecoration","content","width","Body","Title","Link","completeItem","href","removeItem","TaskGroup","tasks","map","task","key","Prompt","ontaskChange","App","loginOpen","registerOpen","cookie","setItem","forceUpdate","updateTasks","get","todoList","i","length","deleted","links","body","Nav","loginOut","openRegister","openLogin","Navbar","variant","bg","Brand","Toggle","aria-controls","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.38790a59.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\nimport Axios from 'axios'\n\nclass RegisterBox extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        usernameErr: '',\n      };\n    }\n    onUsernameChange(e) {\n      this.setState({username: e.target.value, usernameErr:''});\n    }\n    submitRegister(e) {\n      e.preventDefault();\n      const URL = '/registerA';\n      const user = {\n        username: this.state.username,\n      }\n      Axios.post('https://stormy-ocean-79116.herokuapp.com/https://hunter-todo-api.herokuapp.com/user',user).then((res) => {\n       // console.log(res.status);\n          this.setState({usernameErr: \"User registered!\"});\n      }).catch((e) => {\n        this.setState({usernameErr: \"User Already Exists!\"});\n      });\n    }\n  \n    render() {\n      let usernameErr = this.state.usernameErr;\n      return (\n        <div className=\"inner-container\">\n          <div className=\"header\">\n            Register\n          </div>\n          <div className=\"box\">\n  \n            <div className=\"input-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                className=\"Register-input\"\n                placeholder=\"Username\"\n                onChange={this\n                  .onUsernameChange\n                  .bind(this)} />\n                <small className=\"danger-error\">{usernameErr\n                    ? usernameErr\n                  : \"\"}\n                </small>\n            </div>\n            <button\n              type=\"button\"\n              className=\"Register-btn\"\n              onClick={this\n              .submitRegister\n              .bind(this)}>Register</button>\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default RegisterBox;","import React, {Component} from 'react';\nimport '../App.css';\nimport Axios from 'axios'\n\nclass LoginBox extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          usernameErr: '',\n        };\n      }\n      onUsernameChange(e) {\n        this.setState({username: e.target.value, usernameErr:''});\n      }\n    submitLogin(e) {\n      e.preventDefault();\n      const URL = '/authorize';\n      const user = {\n        username: this.state.username,\n      }\n      Axios.post('https://stormy-ocean-79116.herokuapp.com/https://hunter-todo-api.herokuapp.com/auth',user).then((res) => {\n       // console.log(res.status);\n        if (res.status === 200){\n          console.log(res.data);\n          let returnJson = {\"token\":res.data.token,\"username\":this.state.username};\n          this.props.handler(returnJson);\n        }\n      }).catch((e) => {\n        if (e.status === 404){\n          let returnJson = {\"token\":e.data.token,\"username\":this.state.username};\n          this.props.handler(returnJson);\n        }\n        else{\n        console.log(e);\n        this.setState({usernameErr: \"User doesn't exist!\"});\n        }\n      });\n\n\n    }\n  \n    render() {\n      let usernameErr = this.state.usernameErr;\n      return (\n        <div className=\"inner-container\">\n          <div className=\"header\">\n            Login\n          </div>\n          <div className=\"box\">\n  \n            <div className=\"input-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                className=\"login-input\"\n                placeholder=\"Username\"\n                onChange={this\n                  .onUsernameChange\n                  .bind(this)} />\n                <small className=\"danger-error\">{usernameErr\n                    ? usernameErr\n                  : \"\"}\n                </small>    \n            </div>\n            <button\n              type=\"button\"\n              className=\"login-btn\"\n              onClick={this\n              .submitLogin\n              .bind(this)}>Login</button>\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default LoginBox;","import React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport '../App.css'\nimport Axios from 'axios'\n\nclass Task extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    removeItem(){\n        let id = this.props.data.id;\n       // console.log(id);\n        const auth = {\n              headers: {\"Authorization\": localStorage.getItem('userToken')},\n        }\n        Axios.delete('https://stormy-ocean-79116.herokuapp.com/https://hunter-todo-api.herokuapp.com/todo-item/' + id,auth).then((res) => {\n          //  console.log(res.status);\n          //  console.log(res);\n            this.props.handler(res.data);\n        }).catch((e) => {\n            console.log(e);\n            this.setState({taskErr: \"Something went wrong!\"});\n        });\n    }\n    completeItem(){\n        //console.log(\"COMPLETING ITEM\");\n        let id = this.props.data.id;\n        const auth = {\n            headers: {\"Authorization\": localStorage.getItem('userToken')},\n        }\n        Axios.put('https://stormy-ocean-79116.herokuapp.com/https://hunter-todo-api.herokuapp.com/todo-item/' + id,{\"completed\":true},auth).then((res) => {\n       //   console.log(res.status);\n        //  console.log(res);\n          this.props.handler(res.data);\n        }).catch((e) => {\n            console.log(e);\n            this.setState({taskErr: \"Something went wrong!\"});\n        });\n    }\n    render() {\n        let isstrikedThrough = '';\n        if (this.props.data.completed){\n            isstrikedThrough = <> <Card.Text style={{textDecoration:\"line-through\"}}>\n            {this.props.data.content}\n            </Card.Text> </>;\n        }\n        else{\n            isstrikedThrough = <> <Card.Text>\n            {this.props.data.content}\n            </Card.Text> </>;\n        }\n\n        return(\n            <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title>TO_DO</Card.Title>\n                    {isstrikedThrough}\n                    <Card.Link onClick={this.completeItem.bind(this)} href=\"#\"> Mark As Done </Card.Link>\n                    <Card.Link onClick={this.removeItem.bind(this)} href=\"#\"> Remove</Card.Link>\n                </Card.Body>\n            </Card>\n        );\n    }\n\n}\n\nexport default Task;","import React, {Component} from 'react';\nimport Task from './Task.js';\nimport {MDBCol} from \"mdbreact\";\nimport '../App.css'\n\nclass TaskGroup extends Component {\n    constructor(props){\n        super(props);\n    }\n    render() { \n        return(\n        this.props.tasks.map(task =>\n            <MDBCol> <Task key=\"nice\" data={task} handler={this.props.handler}/> </MDBCol>   \n            )\n        );\n   }\n\n}\n\nexport default TaskGroup;","import React, {Component} from 'react';\nimport '../App.css';\nimport Axios from 'axios'\n\nclass Prompt extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          task: '',\n          taskErr: '',\n        };\n      }\n      ontaskChange(e) {\n        this.setState({task: e.target.value, taskErr:''});\n      }\n    submitLogin(e) {\n      e.preventDefault();\n      const task = {\n        content: this.state.task,\n      }\n      const auth = {\n          headers: {\"Authorization\": localStorage.getItem('userToken')},\n      }\n      Axios.post('https://stormy-ocean-79116.herokuapp.com/https://hunter-todo-api.herokuapp.com/todo-item',task,auth).then((res) => {\n        console.log(res.status);\n        console.log(res);\n        this.props.handler(res.data);\n      }).catch((e) => {\n        console.log(e);\n        this.setState({taskErr: \"Something went wrong!\"});\n      });\n\n\n    }\n  \n    render() {\n      let taskErr = this.state.taskErr;\n      return (\n        <div className=\"inner-container\">\n          <div className=\"header\">\n            Add a new Task\n          </div>\n          <div className=\"box\">\n  \n            <div className=\"input-group\">\n              <label htmlFor=\"task\">task</label>\n              <input\n                type=\"textarea\"\n                name=\"task\"\n                className=\"login-input\"\n                placeholder=\"Task to Do\"\n                onChange={this\n                  .ontaskChange\n                  .bind(this)} />\n                <small className=\"danger-error\">{taskErr\n                    ? taskErr\n                  : \"\"}\n                </small>    \n            </div>\n            <button\n              type=\"button\"\n              className=\"login-btn\"\n              onClick={this\n              .submitLogin\n              .bind(this)}>Add Task</button>\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default Prompt;","import React, {Component} from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'\nimport {MDBRow} from \"mdbreact\";\nimport './App.css';\nimport RegisterBox from './components/RegisterBox.js';\nimport LoginBox from './components/LoginBox.js';\nimport TaskGroup from './components/TaskGroup.js';\nimport Prompt from './components/Prompt.js';\nimport Axios from 'axios'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.handler = this.handler.bind(this);\n    this.state={\n      loginOpen: true,\n      registerOpen: false,\n      tasks: [],\n    };\n \n}\n  handler(cookie) {\n    let auth = localStorage.getItem('isAuthenticated');\n    if (!auth){\n    localStorage.setItem('userToken',cookie.token);\n    localStorage.setItem('user',cookie.username);\n    localStorage.setItem('isAuthenticated',true);\n    this.forceUpdate();\n    }\n    this.updateTasks();\n  }\n  updateTasks(){\n    let token = localStorage.getItem('userToken');\n    //console.log(token);\n    let auth = {headers: {\"Authorization\": token}};\n    if (token)\n    Axios.get('https://stormy-ocean-79116.herokuapp.com/https://hunter-todo-api.herokuapp.com/todo-item',auth).then((res) => {\n      let todoList = res.data;\n      for(var i = 0; i< todoList.length; i++){\n        if (todoList[i].deleted == true){\n         delete todoList[i] //remove all instances of deleted todo items\n        }\n      }\n      this.setState({tasks: todoList});\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n  componentDidMount(){\n    let token = localStorage.getItem('userToken');\n   // console.log(token);\n    let auth = {headers: {\"Authorization\": token}};\n    if (token)\n    Axios.get('https://stormy-ocean-79116.herokuapp.com/https://hunter-todo-api.herokuapp.com/todo-item',auth).then((res) => {\n      let todoList = res.data;\n      for(var i = 0; i< todoList.length; i++){\n        if (todoList[i].deleted == true){\n         delete todoList[i] //remove all instances of deleted todo items\n        }\n      }\n      this.setState({tasks: todoList});\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n  openRegister(){\n    this.setState({loginOpen: false, registerOpen: true});\n  };\n\n  openLogin() {\n    this.setState({loginOpen: true, registerOpen: false});\n  };\n\n  loginOut(){\n    localStorage.removeItem('userToken');\n    localStorage.removeItem('user');\n    localStorage.removeItem('isAuthenticated');\n    this.forceUpdate();\n  }\n  render() {\n    //console.log(this.state.user, this.state.isAuthenticated);\n    let links = '';\n    let body = ''\n    let auth = localStorage.getItem('isAuthenticated');\n    if (!auth){\n      links =  <> <Nav.Link onClick={this.openRegister.bind(this)}>Register</Nav.Link>\n      <Nav.Link onClick={this.openLogin.bind(this)}>Login</Nav.Link> </>;\n    }\n    else{\n      links = <Nav.Link onClick={this.loginOut.bind(this)}> Logout </Nav.Link>;\n    }\n    let token = localStorage.getItem('userToken');\n    let name = localStorage.getItem('user');\n    if(auth){\n     body = <> <h1> Welcome {name} </h1>\n      <div className=\"game-area\">\n        <MDBRow>\n          <TaskGroup tasks={this.state.tasks} handler={this.handler}/>\n                 </MDBRow>\n                 <div className=\"actions\">\n                   <div className = \"box-container\">\n                   <Prompt handler={this.handler} />\n                   </div>\n              </div>\n      </div>\n      \n      </>;\n    }\n    else{\n      body = <> <div className=\"box-container\">\n      {this.state.loginOpen && <LoginBox handler ={this.handler} />}\n      {this.state.registerOpen && <RegisterBox/>}\n    </div> </>\n    }\n    return (\n    <div className=\"ToDoList\">\n      <header>\n        <Navbar variant=\"dark\" bg=\"primary\">\n          <Navbar.Brand href=\"/\">Modern ToDoList</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Nav bg=\"light\" className=\"ml-auto\">\n                  {links}\n            </Nav>\n        </Navbar>\n      </header>\n        {body}\n    </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}